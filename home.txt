import 'package:flutter/material.dart';

class Calculator extends StatefulWidget {
  const Calculator({super.key});

  @override
  State<Calculator> createState() => _CalculatorState();
}

class _CalculatorState extends State<Calculator> {
  String _output = "0";
  String _operationText = "";
  double _num1 = 0;
  double _num2 = 0;
  String _operation = "";
  bool _waitingForSecondNumber = false;

  void _buttonPressed(String buttonText) {
    setState(() {
      if (buttonText == "C") {
        _output = "0";
        _operationText = "";
        _num1 = 0;
        _num2 = 0;
        _operation = "";
        _waitingForSecondNumber = false;
      } else if (buttonText == "DEL") {
        if (_output.length > 1) {
          _output = _output.substring(0, _output.length - 1);
        } else {
          _output = "0";
        }
      } else if (buttonText == "+/-" && _output != "0") {
        _output = (double.parse(_output) * -1).toString();
        if (_output.endsWith(".0")) {
          _output = _output.substring(0, _output.length - 2);
        }
      } else if (buttonText == ".") {
        if (!_output.contains(".")) {
          _output += ".";
        }
      } else if (["+", "-", "X", "/", "%"].contains(buttonText)) {
        _num1 = double.parse(_output);
        _operation = buttonText;
        _operationText = "$_num1 $_operation";
        _waitingForSecondNumber = true;
        _output = "0";
      } else if (buttonText == "=" && _output != "0") {
        _num2 = double.parse(_output);
        switch (_operation) {
          case "+":
            _output = (_num1 + _num2).toString();
            break;
          case "-":
            _output = (_num1 - _num2).toString();
            break;
          case "X":
            _output = (_num1 * _num2).toString();
            break;
          case "/":
            _output = (_num1 / _num2).toString();
            break;
          case "%":
            _output = (_num1 % _num2).toString();
            break;
        }
        if (_output.endsWith(".0")) {
          _output = _output.substring(0, _output.length - 2);
        }
        _operationText = "$_num1 $_operation $_num2 =";
        _operation = "";
        _waitingForSecondNumber = false;
      } else {
        _output = _output == "0" ? buttonText : _output + buttonText;
      }
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Align(
          alignment: Alignment.centerLeft,
          child: Text(
            'Simple Calculator',
            style: TextStyle(color: Colors.white, fontSize: 20),
          ),
        ),
        backgroundColor: Colors.green,
        bottom: PreferredSize(
          preferredSize: const Size.fromHeight(2.0),
          child: Container(
            color: Colors.black,
            height: 2.0,
          ),
        ),
      ),
      body: Column(
        children: [
          Container(
            padding: const EdgeInsets.symmetric(horizontal: 20),
            alignment: Alignment.centerRight,
            height: 60,
            child: Text(
              _operationText,
              style: const TextStyle(
                fontSize: 24,
                color: Colors.grey,
              ),
            ),
          ),
          Container(
            padding: const EdgeInsets.symmetric(horizontal: 20),
            alignment: Alignment.centerRight,
            height: 150,
            color: Colors.grey[500],
            child: Text(
              _output,
              style: const TextStyle(
                fontSize: 56,
                fontWeight: FontWeight.bold,
              ),
            ),
          ),
          Expanded(
            child: Padding(
              padding: const EdgeInsets.all(2),
              child: GridView.count(
                crossAxisCount: 4,
                crossAxisSpacing: 2,
                mainAxisSpacing: 2,
                children: [
                  _buildButton("C"), _buildButton("DEL"), _buildButton("%"), _buildButton("/"),
                  _buildButton("7"), _buildButton("8"), _buildButton("9"), _buildButton("X"),
                  _buildButton("4"), _buildButton("5"), _buildButton("6"), _buildButton("-"),
                  _buildButton("1"), _buildButton("2"), _buildButton("3"), _buildButton("+"),
                  _buildButton("+/-"), _buildButton("0"), _buildButton("."), _buildButton("="),
                ],
              ),
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildButton(String text) {
    return AspectRatio(
      aspectRatio: 1,
      child: ElevatedButton(
        style: ElevatedButton.styleFrom(
          backgroundColor: Colors.blue,
          foregroundColor: Colors.white,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.zero,
            side: const BorderSide(color: Colors.black, width: 2),
          ),
          padding: EdgeInsets.zero,
        ),
        onPressed: () => _buttonPressed(text),
        child: Text(
          text,
          style: const TextStyle(fontSize: 28),
        ),
      ),
    );
  }
}
